(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{330:function(r,t,i){r.exports=i.p+"assets/img/contain.020d39c6.png"},331:function(r,t,i){r.exports=i.p+"assets/img/compatibility.269752ce.png"},355:function(r,t,i){"use strict";i.r(t);var a=i(27),e=Object(a.a)({},(function(){var r=this,t=r._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("h1",{attrs:{id:"专题分享-css-grid"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#专题分享-css-grid"}},[r._v("#")]),r._v(" 专题分享 -- CSS Grid")]),r._v(" "),t("p",[r._v("css的flex将容器变为一维布局, 意思是所有块级元素在父级容器设置为"),t("code",[r._v("display: flex")]),r._v("时, 都可以让其变为想要的轴线排列布局。而"),t("code",[r._v("display: grid")]),r._v('以及其他grid属性的出现, 则是将页面样式带入了二维布局中。Flex 布局是轴线布局，只能指定"项目"针对轴线的位置，可以看作是一维布局。Grid 布局则是将容器划分成"行"和"列"，产生单元格，然后指定"项目所在"的单元格，可以看作是二维布局。Grid 布局远比 Flex 布局强大。')]),r._v(" "),t("h2",{attrs:{id:"grid-基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#grid-基本概念"}},[r._v("#")]),r._v(" grid 基本概念")]),r._v(" "),t("blockquote",[t("p",[t("strong",[r._v("容器和项目")])])]),r._v(" "),t("p",[r._v("采用网格布局的区域叫做'容器'(container), 在container上设置"),t("strong",[r._v("display: grid")]),r._v("就能使用网格布局。而在容器内的元素我们称为'项目'(item), 在css grid里, 处理item的css属性有很多, 这些属性也足够使得grid网格布局更强大。")]),r._v(" "),t("blockquote",[t("p",[t("strong",[r._v("行和列")])])]),r._v(" "),t("p",[r._v("容器里水平方向的项目称作行(row), 垂直方向的项目称作列(column)")]),r._v(" "),t("blockquote",[t("p",[t("strong",[r._v("单元格")])])]),r._v(" "),t("p",[r._v("每一个item项目称作一个单元格, 单元格里可放不同元素, 元素在不同单元格里的不同样式组成了容器的不同布局")]),r._v(" "),t("blockquote",[t("p",[t("strong",[r._v("网格线")])])]),r._v(" "),t("p",[r._v("划分网格的线，称为'网格线'（grid line）。水平网格线划分出行，垂直网格线划分出列。正常情况下，n行有n + 1根水平网格线，m列有m + 1根垂直网格线，比如三行就有四根水平网格线。")]),r._v(" "),t("h2",{attrs:{id:"grid-属性介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#grid-属性介绍"}},[r._v("#")]),r._v(" grid 属性介绍")]),r._v(" "),t("p",[t("img",{attrs:{src:i(330),alt:""}})]),r._v(" "),t("ul",[t("li",[r._v("row line: 行线")]),r._v(" "),t("li",[r._v("column line: 列线")]),r._v(" "),t("li",[r._v("track: 网格轨道，即行线和列线，或列线和列线之间所形成的区域，用来摆放子元素")]),r._v(" "),t("li",[r._v("gap:  网格间距，行线和列线，或列线和列线之间所形成的不可利用的区域，用来分隔元素")]),r._v(" "),t("li",[r._v("cell: 网格单元格，由行线和列线所分隔出来的区域，用来摆放子元素")]),r._v(" "),t("li",[r._v("area: 网格区域，由单个或多个网格单元格组成，用来摆放子元素")])]),r._v(" "),t("h3",{attrs:{id:"grid-container-属性介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#grid-container-属性介绍"}},[r._v("#")]),r._v(" grid container 属性介绍")]),r._v(" "),t("ul",[t("li",[t("p",[t("strong",[r._v("display: grid")])])]),r._v(" "),t("li",[t("p",[t("strong",[r._v("grid-template-rows")])])]),r._v(" "),t("li",[t("p",[t("strong",[r._v("grid-template-columns")])])]),r._v(" "),t("li",[t("p",[t("strong",[r._v("grid-template-area")]),r._v(': 网格布局允许指定"区域"（area），一个区域由单个或多个单元格组成。'),t("code",[r._v("grid-template-areas")]),r._v("属性用于定义区域, 需要配合grid-area使用。")])]),r._v(" "),t("li",[t("p",[r._v('grid-auto-flow: 划分网格以后，容器的子元素会按照顺序，自动放置在每一个网格。默认的放置顺序是"先行后列"，即先填满第一行，再开始放入第二行.这个顺序由'),t("code",[r._v("grid-auto-flow")]),r._v("属性决定，"),t("strong",[r._v("默认值是row")]),r._v("。也可以将它设成column")])]),r._v(" "),t("li",[t("p",[r._v("display: inline-grid")])]),r._v(" "),t("li",[t("p",[r._v("grid-row-gap")])]),r._v(" "),t("li",[t("p",[r._v("grid-column-gap")])]),r._v(" "),t("li",[t("p",[r._v("grid-gap")])])]),r._v(" "),t("h3",{attrs:{id:"grid-item-属性介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#grid-item-属性介绍"}},[r._v("#")]),r._v(" grid item 属性介绍")]),r._v(" "),t("ul",[t("li",[t("strong",[r._v("grid-area")]),r._v(": 是"),t("code",[r._v("grid-column-start")]),r._v("、"),t("code",[r._v("grid-row-start")]),r._v("、 "),t("code",[r._v("grid-column-end")]),r._v("、"),t("code",[r._v("grid-row-end")]),r._v(" 的缩写。同时也可以配合"),t("code",[r._v("grid-template-area")]),r._v("属性进行布局")]),r._v(" "),t("li",[r._v("grid-column-start")]),r._v(" "),t("li",[r._v("grid-column-end")]),r._v(" "),t("li",[r._v("grid-row-start")]),r._v(" "),t("li",[r._v("grid-row-end")]),r._v(" "),t("li",[r._v("grid-column: 支持 '/'写法 和 span关键字")]),r._v(" "),t("li",[r._v("grid-row")])]),r._v(" "),t("h2",{attrs:{id:"实例讲解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实例讲解"}},[r._v("#")]),r._v(" 实例讲解")]),r._v(" "),t("ul",[t("li",[r._v("grid布局对比")])]),r._v(" "),t("p",[r._v("https://codepen.io/hzyhhh/pen/QWLajvr?editors=1100")]),r._v(" "),t("ul",[t("li",[r._v("实现同一个效果flex和grid对比")])]),r._v(" "),t("p",[r._v("http://192.168.83.3:8081//index.html#/callList")]),r._v(" "),t("h2",{attrs:{id:"兼容性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#兼容性"}},[r._v("#")]),r._v(" 兼容性")]),r._v(" "),t("p",[t("img",{attrs:{src:i(331),alt:""}})]),r._v(" "),t("h2",{attrs:{id:"参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[r._v("#")]),r._v(" 参考")]),r._v(" "),t("ul",[t("li",[t("p",[t("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2019/03/grid-layout-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("阮一峰 CSS Grid 网格布局教程"),t("OutboundLink")],1)])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"http://ghmagical.com/article/page/id/eAhyFiDCFGb6",target:"_blank",rel:"noopener noreferrer"}},[r._v("CSS：Grid布局"),t("OutboundLink")],1)])]),r._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://juejin.im/post/5b70c7c7e51d45666e2c6ade#heading-7",target:"_blank",rel:"noopener noreferrer"}},[r._v("边学边玩CSS Grid"),t("OutboundLink")],1)])])])])}),[],!1,null,null,null);t.default=e.exports}}]);