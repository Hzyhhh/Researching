(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{332:function(t,a,s){t.exports=s.p+"assets/img/utc.e26adaf6.jpg"},333:function(t,a,s){t.exports=s.p+"assets/img/ways.4c7ec311.jpg"},356:function(t,a,s){"use strict";s.r(a);var e=s(27),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git-提交未计算贡献-解决办法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-提交未计算贡献-解决办法"}},[t._v("#")]),t._v(" Git 提交未计算贡献 --解决办法")]),t._v(" "),a("p",[t._v("如果哪天你发现自己在 GitHub 提交了记录, 但是首页的小绿格没有增加, 你可以参考下这篇文章！")]),t._v(" "),a("p",[t._v("开始以为是延迟，或者需要第二天才能看到自己提交的贡献点")]),t._v(" "),a("p",[a("img",{attrs:{src:s(332),alt:"utc"}})]),t._v(" "),a("p",[t._v("后来发现并不是这样的。")]),t._v(" "),a("p",[t._v("GitHub 的 Commit 记录和"),a("strong",[t._v("本地的配置用户名以及邮箱与 GitHub 不一致")]),t._v("会导致不增加贡献！")]),t._v(" "),a("p",[a("img",{attrs:{src:s(333),alt:"ways"}})]),t._v(" "),a("p",[t._v("后来发现因为是在公司提交代码，所以在公司配置的默认是是公司的邮箱，而不是自己的邮箱 😅 干哦~")]),t._v(" "),a("h2",{attrs:{id:"解决办法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决办法"}},[t._v("#")]),t._v(" 解决办法")]),t._v(" "),a("ol",[a("li",[t._v("修改全局默认邮箱的用户名和邮箱")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(' git config --global user.name "Hzyhhh"\n git config --global user.email "799309084@qq.com"\n')])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("修改单个 Git 仓库的用户名和邮箱")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('cd .git\ngit config user.name "Hzyhhh"\ngit config user.email "799309084@qq.com"\n')])])]),a("p",[t._v("然后通过执行命令可以查看 config 文件检查是否修改成功：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cat config\n")])])]),a("h2",{attrs:{id:"找回之前的提交记录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#找回之前的提交记录"}},[t._v("#")]),t._v(" 找回之前的提交记录")]),t._v(" "),a("p",[t._v("完成以上步骤后，虽然提交代码会有绿格了，但是之前提交的怎么找回来呢？")]),t._v(" "),a("p",[t._v("首先 "),a("em",[t._v("git log")]),t._v(" 查看 GitHub 之前的提交记录")]),t._v(" "),a("p",[t._v("我们只需要修改历史提交记录的提交用户名和邮箱就能够正确显示了 😀")]),t._v(" "),a("p",[t._v("首先在项目根目录下创建 email.sh ，然后写入如下代码:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('#!/bin/sh\n\ngit filter-branch --env-filter \'\n\nOLD_EMAIL="zy-huang@mygzb.com"\nCORRECT_NAME="Hzyhhh"\nCORRECT_EMAIL="799309084@qq.com"\n\nif [ "$GIT_COMMITTER_EMAIL" = "$OLD_EMAIL" ]\nthen\n    export GIT_COMMITTER_NAME="$CORRECT_NAME"\n    export GIT_COMMITTER_EMAIL="$CORRECT_EMAIL"\nfi\nif [ "$GIT_AUTHOR_EMAIL" = "$OLD_EMAIL" ]\nthen\n    export GIT_AUTHOR_NAME="$CORRECT_NAME"\n    export GIT_AUTHOR_EMAIL="$CORRECT_EMAIL"\nfi\n\' --tag-name-filter cat -- --branches --tags\n\n')])])]),a("p",[t._v("接下来执行一下脚本")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("email.sh\n")])])]),a("p",[t._v("提交")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git push origin --force --all\n")])])]),a("h2",{attrs:{id:"参考文献"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.im/post/6844903987448283144",target:"_blank",rel:"noopener noreferrer"}},[t._v('提交代码到 GitHub，"小绿格"却不增加'),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);